exports.db = db;
exports.render = render;
exports.errorHandle = errorHandle;
exports.tmplFile = templateHash;
exports.scope = scopeMaker;
exports.http = httpMaker;


var walk = require('walk');

var errorHandle = Error.prototype.constructor();

var db = {};

var template = require('swig');

var scopeMaker = function() {
    return {};
};

var httpMaker = function(request, response) { //this one is special, built in.
    this.Request = request;
    this.Response = response;
};

///////////////////////////////////////////////////////////////////////////////////////
var render = function() {
    if (!options.PUBLIC.endsWith('/')) {
        options.PUBLIC = options.PUBLIC.concat('/');
    }
    var len = options.PUBLIC.length;
    var templateHash = {};

    walk_options = {
        listeners: {
            file: function(root, stat, next) {
                if (stat.name.endsWith(options.TMPL_EXTENSION)) {
                    var filename = root + stat.name,
                        data = fs.readFileSync(filename, options.TMPL_ENCODE);
                    templateHash[filename.slice(len)] = data;
                }
                next();
            }
        }
    };

    walk.walkSync(options.PUBLIC, walk_options);
    return function(name, json) {
        return template.render(templateHash[name], json);
    };
}();




//在这里读入所有的template file
//work flow, finish coding
//debuging
//write package JSON+license+ReadMe
// commit to github
// 嘚瑟
